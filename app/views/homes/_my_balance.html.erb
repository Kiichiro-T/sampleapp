<div class="col-md-8 grid-margin stretch-card">
  <div class="card">
    <div class="card-body" >
      <h4 class="card-title"><%= link_to 'My収支情報', user_transactions_path(user_id: current_user.id), style: 'text-decoration-line: none; color: black;' %></h4>
      <canvas id="transaction-history" class="transaction-chart"
              data-total-payment="<%= @total_payment %>"
              data-total-unpaid-debt="<%= @total_unpaid_debt %>"
              data-total-expected-debt="<%= @total_expected_debt %>"></canvas>
      <% if @urgent_expected_debts.present? %>
        <% @urgent_expected_debts.each do |debt| %>
          <div class="bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3">
            <div class="text-md-center text-xl-left">
              <h6 class="mb-1">期限間近の支払い</h6>
              <p class="text-muted mb-0">
                <% if debt.event_id.present? %>
                  <% event = Event.find(debt.event_id) %>
                  <%= link_to event.name, group_event_path(group_id: event.group_id, id: event.id) %>
                <% else %>
                  <%= User.find(debt.creditor_id).name %>
                <% end %>
              </p>
            </div>
            <div class="align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0">
              <h6 class="font-weight-bold mb-0">￥<%= debt.debt %></h6>
            </div>
          </div>
        <% end %>
      <% end %>
    </div>
  </div>
</div>
<script>
  (function($) {
  'use strict';
  $.fn.andSelf = function() {
    return this.addBack.apply(this, arguments);
  }
  $(function() {
    if ($("#transaction-history").length) {
      var $transactionHistory = $('#transaction-history');
      var $totalPayment = $transactionHistory.data('total-payment');
      var $totalUnpaidDebt = $transactionHistory.data('total-unpaid-debt');
      var $totalExpectedDebt = $transactionHistory.data('total-expected-debt');
      var areaData = {
        labels: ["支払った金額", "支払い予定金額","未払い金額"],
        datasets: [{
            data: [$totalPayment, $totalExpectedDebt, $totalUnpaidDebt],
            backgroundColor: [
              "#111111","#00d25b","#ffab00"
            ]
          }
        ]
      };
      var areaOptions = {
        responsive: true,
        maintainAspectRatio: true,
        segmentShowStroke: false,
        cutoutPercentage: 70,
        elements: {
          arc: {
              borderWidth: 0
          }
        },
        legend: {
          display: false
        },
        tooltips: {
          enabled: true
        }
      }
      var transactionhistoryChartPlugins = {
        beforeDraw: function(chart) {
          var width = chart.chart.width,
              height = chart.chart.height,
              ctx = chart.chart.ctx;

          ctx.restore();
          var fontSize = 1;
          ctx.font = fontSize + "rem sans-serif";
          ctx.textAlign = 'left';
          ctx.textBaseline = "middle";
          ctx.fillStyle = "#ffffff";

          var text = "$1200",
              textX = Math.round((width - ctx.measureText(text).width) / 2),
              textY = height / 2.4;

          ctx.fillText(text, textX, textY);

          ctx.restore();
          var fontSize = 0.75;
          ctx.font = fontSize + "rem sans-serif";
          ctx.textAlign = 'left';
          ctx.textBaseline = "middle";
          ctx.fillStyle = "#6c7293";

          var texts = "支払い",
              textsX = Math.round((width - ctx.measureText(text).width) / 1.93),
              textsY = height / 1.7;

          ctx.fillText(texts, textsX, textsY);
          ctx.save();
        }
      }
      var transactionhistoryChartCanvas = $("#transaction-history").get(0).getContext("2d");
      var transactionhistoryChart = new Chart(transactionhistoryChartCanvas, {
        type: 'doughnut',
        data: areaData,
        options: areaOptions,
        plugins: transactionhistoryChartPlugins
      });
    }
  });
})(jQuery);
</script>
